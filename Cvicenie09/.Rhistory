abline(0,0, col = 'red')
acf2Res <-modelAR2$resid(3:length(reziduaAR2))
acf(acf2Res, 40)
pacf(acf2Res, 40)
Box.test(acf2Res)
Box.test(acf2Res, 'Ljung')
acf2Res <-modelAR2$resid(3:length(reziduaAR2))
acf(acf2Res, 40)
pacf(acf2Res, 40)
Box.test(acf2Res)
Box.test(acf2Res, 'Ljung')
acf2Res <-modelAR2$resid(3:length(reziduaAR2))
acf(acf2Res, 40)
pacf(acf2Res, 40)
Box.test(acf2Res)
Box.test(acf2Res, 'Ljung')
acf2Res <-modelAR2$resid[3:length(reziduaAR2)]
acf(acf2Res, 40)
pacf(acf2Res, 40)
Box.test(acf2Res)
Box.test(acf2Res, 'Ljung')
acf2Res <-modelAR2$resid[3:length(reziduaAR2)]
acf(acf2Res, 40)
pacf(acf2Res, 40)
Box.test(acf2Res)
Box.test(acf2Res, type = 'Ljung')
hist(acf2Res)
shapiro.test(acf2Res)
WINE <- read.table("WINE.DAT")
str(WINE)
vinodata<-WINE$V1
plot(vinodata, type = "o", main = "Predaj austrálskeho červeného vína za obdobie 1980 - 1991", ylab="mesačný predaj v tisícoch litrov", col="blue", pch=22)
lVino <- log(vinodata)
plot(lvino, type = "o", main = "Predaj austrálskeho červeného vína za obdobie 1980 - 1991", ylab="logaritmus mesačného predaja", col="blue", pch=22)
lVino <- log(vinodata)
plot(lVino, type = "o", main = "Predaj austrálskeho červeného vína za obdobie 1980 - 1991", ylab="logaritmus mesačného predaja", col="blue", pch=22)
lVino <- log(vinodata)
plot(lVino, type = "o", main = "Predaj austrálskeho červeného vína za obdobie 1980 - 1991", ylab="logaritmus mesačného predaja", col="blue", pch=22)
cas = 1:length(lVino)
lm(lVino~cas)
lVino <- log(vinodata)
plot(lVino, type = "o", main = "Predaj austrálskeho červeného vína za obdobie 1980 - 1991", ylab="logaritmus mesačného predaja", col="blue", pch=22)
cas = 1:length(lVino)
lmVino <- lm(lVino~cas)
lines(lmVino)
lVino <- log(vinodata)
plot(lVino, type = "o", main = "Predaj austrálskeho červeného vína za obdobie 1980 - 1991", ylab="logaritmus mesačného predaja", col="blue", pch=22)
cas = 1:length(lVino)
lmVino <- lm(lVino~cas)
lines(cas,lmVino)
lVino <- log(vinodata)
plot(lVino, type = "o", main = "Predaj austrálskeho červeného vína za obdobie 1980 - 1991", ylab="logaritmus mesačného predaja", col="blue", pch=22)
cas = 1:length(lVino)
lmVino <- lm(lVino~cas)
lines(cas,predict(lmVino), col='red')
resVino <- residuals(lmVino)
plot(resVino, main='Rezidá vína')
abline(0,0,col = 'red')
resVino <- residuals(lmVino)
plot(resVino, main='Rezidá vína', type = 'o')
abline(0,0,col = 'red')
vinaPer <- spec.pgram(resVino, log='no')
vinoPer
vinaPer <- spec.pgram(resVino, log='no')
vinaPer
vinaPer <- spec.pgram(resVino, log='no')
vinaPer$freq[12]
vinaPer <- spec.pgram(resVino, log='no')
vinaPer$freq[13]
vinaPer <- spec.pgram(resVino, log='no')
vinaPer$freq[11]
vinaPer <- spec.pgram(resVino, log='no')
vinaPer$freq[12]
1/12
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
periodaTrend <- lm(lVino~cas+sin+cos)
plot(cas, predict(periodaTrend), main = 'Model s jednou frekvenciou', type = 'o')
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
periodaTrend <- lm(lVino~cas+s+c)
plot(cas, predict(periodaTrend), main = 'Model s jednou frekvenciou', type = 'o')
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
periodaTrend <- lm(lVino~s+c)
plot(cas, predict(periodaTrend), main = 'Model s jednou frekvenciou', type = 'o')
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
periodaTrend <- lm(lVino~s+c)
plot(cas, predict(periodaTrend), main = 'Model s jednou frekvenciou', type = 'o')
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
periodaTrend <- lm(lVino~cas+s+c)
plot(cas, predict(periodaTrend), main = 'Model s jednou frekvenciou', type = 'o')
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
periodaTrend <- lm(lVino~cas+s+c)
periodaTrend
plot(cas, predict(periodaTrend), main = 'Model s jednou frekvenciou', type = 'o')
resPerioda <- residuals(periodaTrend)
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
periodaTrend <- lm(lVino~cas+c)
periodaTrend
plot(cas, predict(periodaTrend), main = 'Model s jednou frekvenciou', type = 'o')
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
periodaTrend <- lm(lVino~cas+c+s)
periodaTrend
plot(lVino, main = 'Model s jednou frekvenciou', type = 'o')
lines(cas, predict(periodaTrend), col='red')
resPerioda <- residuals(periodaTrend)
acfPer <- acf(periodaTrend)
pacfPef <- pacf(periodaTrend)
resPerioda <- residuals(periodaTrend)
acfPer <- acf(resPerioda)
pacfPef <- pacf(resPerioda)
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
c2 <- cos(4*pi*1/12*cas)
s2 <- sin(4*pi*1/12*cas)
periodaTrend2 <- lm(lVino~cas+c+s+c2+s2)
periodaTrend2
plot(lVino, main = 'Model s dvoma frekvenciami', type = 'o')
lines(cas, predict(periodaTrend2), col='red')
c <- cos(2*pi*1/12*cas)
s <- sin(2*pi*1/12*cas)
c2 <- cos(2*pi*1/4*cas)
s2 <- sin(2*pi*1/4*cas)
periodaTrend2 <- lm(lVino~cas+c+s+c2+s2)
periodaTrend2
plot(lVino, main = 'Model s dvoma frekvenciami', type = 'o')
lines(cas, predict(periodaTrend2), col='red')
resPerioda2 <- residuals(periodaTrend2)
acfPer2 <- acf(resPerioda2)
pacfPef2 <- pacf(resPerioda2)
Box.test(resPerioda2)
Box.test(resPerioda2,type='Ljung')
summary(resPerioda2)
summary(resPerioda2)
hist(resPerioda2)
shapiro.test(resPerioda2)
summary(periodaTrend2)
hist(resPerioda2)
shapiro.test(resPerioda2)
dieta <- read.delim2("dieta.txt")
tyzden <- dieta$tyzden
dlzka <- dieta$dlzka..cm.
hmotnost <- dieta$hmotnost..g.
plot(tyzden, dlzka, type = "o", main = "Vývin dieťaťa", xlab = "Týždeň", ylab = "dĺžka [cm]", col = "red")
resLakeData <- residuals(fitLakeData)
show(resLakeData)
# Chunk 1
LAKE <- read.table("LAKE.DAT", quote="\"", comment.char="")
# Chunk 2
lakeData <- LAKE$V1
lateTimeData <- ts(lakeData, start=1860, end=1980)
t <- 1875:1972
plot(t, lakeData, type='o', col='red')
# Chunk 3
fitLakeData <- lm(lakeData~t)
coefficients(fitLakeData)
# Chunk 4
plot(t, lakeData, type='o', col='red')
abline(fitLakeData, col='blue')
resLakeData <- residuals(fitLakeData)
show(resLakeData)
plot(t, resLakeData, type='o', col='red', xlab='Rok', ylab = 'Reziduá')
# Chunk 1
globalwarm <- read.delim2("globalwarm.txt", header=FALSE)
str(globalwarm)
# Chunk 2: nacitanie premennej a zobrazenie
globaldata<-globalwarm$V1
t<-1900:1997
resGlobData <- residuals(fitGlobData)
plot(t, resGlobData, type = 'o', col='blue', xlab = 'Rok', ylab = 'Reziduá')
fitResData <- lm(resGlobData~t)
coefficients(fitResData)
abline(fitResData, col= 'red')
# Chunk 1
globalwarm <- read.delim2("globalwarm.txt", header=FALSE)
str(globalwarm)
# Chunk 2: nacitanie premennej a zobrazenie
globaldata<-globalwarm$V1
t<-1900:1997
# Chunk 3
fitGlobData <- lm(globaldata~t)
coefficients(fitGlobData)
plot(t, globaldata, type = 'o', col='blue', xlab = 'Rok', ylab = 'Teplotné odchýlky')
abline(fitGlobData, col = 'red')
resGlobData <- residuals(fitGlobData)
plot(t, resGlobData, type = 'o', col='blue', xlab = 'Rok', ylab = 'Reziduá')
fitResData <- lm(resGlobData~t)
coefficients(fitResData)
abline(fitResData, col= 'red')
roky <- USPOP$rok
pop <- USPOP$populacia
plot(roky, pop, type = 'o', main='Populácia USA', xlab = 'rok', ylab = 'populácia')
help("rbinom")
rbinom(5,1,0.5)
rbinom(6,1,0.5)
rbinom(6,1,0.5)*2-1
cumsum(rbinom(6,1,0.5)*2-1)
n = 40
arma2_1 = arima(list(c(0.8,-0.8),c(1)),n)
arma2_1 = arima(list(c(0.8,-0.8),1),n)
arma2_1 = arima.sim(list(c(0.8,-0.8),1),n)
plot(arma2_1)
arma2_1 = arima.sim(list(c(-0.8,+0.8),1),n)
plot(arma2_1)
n = 500
arma2_1 = arima.sim(list(c(-0.8,+0.8),1),n)
arma1_2 = arima.sim(list(0.5,c(-0.8,+0.8)),n)
par(mfrow(2,1))
par(mfrow=c(2,1))
plot(arma1_2)
plot(arma2_1)
par(mfrow(1,2))
par(mfrow=c(1,2))
plot(arma1_2)
plot(arma2_1)
(-1.8+sqrt(1.8*1.8-4*0.81))/(2*0.81)
(-1.8-sqrt(1.8*1.8-4*0.81))/(2*0.81)
sqrt(1.8*1.8-4*0.81)
1.8*1.8-4*0.81
a = arima.sim
n = 500
a = arima.sim(list(-0.5,0.5),n)
plot(a)
par(mfrow=c(1,1))
plot(a)
aAcf = ARMAacf(ar=-0.5,ma=0.5,40,pacf=FALSE)
plot(aAcf)
plot(aAcf,type='h')
t = 1:500
sint = sin(2*pi*t/12)
cost = cos(2*pi*t/12)
t2 = t*t
model = 0.5*t+0.25*t2+0.9*sint+1.25*cost+rnorm(length(t))
plot(model)
model = 0.5*t-0.25*t2+0.9*sint+1.25*cost+12.5*rnorm(length(t))
plot(model)
model = 0.05*t-0.0012*t2+0.9*sint+1.25*cost+12.5*rnorm(length(t))
plot(model)
plot(model, type='o')
lmodel = lm(model~t+t2)
coefficients(lmodel)
abline(t, predict(lmodel))
abline(t, predict(lmodel), col='red')
resLModel = residuals(lmodel)
plot(resLModel)
plot(resLModel,type='o')
Box.test(resLModel)
Box.test(resLModel, type = 'Ljang')
Box.test(resLModel, type = 'Ljung')
shapiro.test(resLModel)
afcD = acf(resLModel, 1, pacf=FALSE)
afcD = acf(resLModel, 1, pacf=TRUE)
afcD = acf(resLModel, 40)
pafcD = pacf(resLModel, 40)
spec.pgram(resLModel)
model = 0.00005*t-0.000012*t2+2.9*sint+1.25*cost+2.5*rnorm(length(t))
plot(model, type='o')
model = 0.00005*t-0.000012*t2+2.9*sint+1.25*cost+.5*rnorm(length(t))
plot(model, type='o')
model = 0.00005*t-0.00012*t2+2.9*sint+1.25*cost+.23*rnorm(length(t))
plot(model, type='o')
lmodel = lm(model~t+t2)
coefficients(lmodel)
resLModel = residuals(lmodel)
abline(t, predict(lmodel))
plot(resModel,type='o')
plot(resLModel,type='o')
Box.test(resLModel)
Box.test(resLModel,type = 'Ljung')
periModel = spec.pgram(resLModel, lag=FALSE)
periModel = spec.pgram(resLModel, lag="no")
show(periModel)
max(periModel$spec)
find(max(periModel$spec))
max(periModel$spec)
1/12
periModel$spec[41]
periModel$spec[40]
periModel$spec[42]
periModel$freq[42]
cosm = cos(2*pi*0.084*t)
sinm = sin(2*pi*0.084*t)
mresmodel = lm(resLModel~cosm+sinm)
coefficients(mresmodel)
resResModel = residuals(mresmodel)
plot(resResModel,type='o')
plot(resLModel)
plot(resLModel,type='o')
abline(t,predict(resResModel),type='o', col='red')
abline(t,predict(mresmodel),type='o', col='red')
data = 0.5*t-0.25*t2 + cost + 0.92*sint + 0.2*rnorm(length(t))
plot(data)
data = 15.28 + 0.5*t + cost + 0.92*sint + 0.2*rnorm(length(t))
plot(data)
data = - 15.28 + 0.5*t + cost + 0.92*sint + 0.2*rnorm(length(t))
data = - 15.28 + 0.5*t + cost + 0.92*sint + 0.2*rnorm(length(t))
plot(data)
ldata = lm(data~t)
coefficients(ldata)
abline(t,predict(ldata),col='red')
plot(data)
lines(t,predict(ldata),col='red')
resData = residuals(lmodel)
plot(resData)
plot(resData,type = 'o')
Box.test(resData)
Box.test(resData,type = 'Ljung')
shapiro.test(resData)
acfData = acf()
acfData = acf(resData)
acfData = acf(resData,40)
pacfData = pacf(resData,40)
periodData = spec.pgram(resData,lag='no')
show(periModel$spec)
show(periModel$spec[42])
show(periModel$freq[42])
sinm = sin(periModel$freq[42]*2*pi*t)
cosm = cos(periModel$freq[42]*2*pi*t)
plmData = lm
plmData = lm(resData~sinm+cosm)
coefficients(plmData)
plot(resRata)
plot(resData)
plot(resData,type='o')
lines(t, predict(plmData), col='red')
resPlmData = residuals(plmData)
plot(resPlmData)
plot(resPlmData,type = 'l')
plot(resPlmData,type = 'o4')
plot(resPlmData,type = 'o')
plmData = lm(resData~sint+cost)
resPlmData = residuals(plmData)
plot(resPlmData,type = 'o')
abline(mean(resPlmData),0)
abline(mean(resPlmData),0,col='magenta')
abline(mean(resPlmData),0,col='cyan')
Box.test()
Box.test(resPlmData)
Box.test(resPlmData,type='Ljung')
shapiro.test(resPlmData)
acfplm = acf(resPlmData)
acfplm = acf(resPlmData,40)
pacfplm = pacf(resPlmData,40)
hist(resPlmData)
SSE = sqrt(sum(resPlmData^2)/(length(data)-3))
show(SSE)
plot(data,type = 'o')
ddata = diff(data, 12)
plot(ddata,type = 'o')
help("diff")
plot(diff(data, lag=12),type = 'o')
plot(diff(diff(data, lag=12)),type = 'o')
plot(diff(diff(data), lag=12),type = 'o')
plot(diff(data),type = 'o')
a = c(1,1,1)
a/length(a)
a = c(1,1,1,1)
a/length(a)
ones(3)
help("vectors")
help("vector")
a = c(a,1)
a
a = c(a,1)
a = c(a,1)
a
a = c()
a
for (i in 1:5) {
a = c(a,1)
}
a
a/length(a)
plot(data, type='o')
filteredData = filter(data, c(1,1,1)/3)
lines(filteredData)
lines(filteredData, col='red', lwd = 5)
lines(filteredData, col='red', lwd = 2)
T = 1:40
dataT = - 15.28 + 0.5*T  + 0.2*rnorm(length(T))
lines(filter(dataT, c(1,1,1)/3), col='red', lwd = 5)
plot(dataT, type='o')
lines(filter(dataT, c(1,1,1)/3), col='red', lwd = 3)
length(dataT[2:(length(dataT)-1)])
length(filter(dataT, c(1,1,1)/3))
length(dataT[1:(length(dataT)-1)])
length(dataT[1:(length(dataT))])
show(filter(dataT, c(1,1,1)/3))
filteredDataT = filter(dataT, c(1,1,1)/3)
epsilonT = dataT[2:(length(dataT)-1)] - filteredDataT[2:(length(dataT)-1)]
plot(epsilonT, type = 'o', col= 'cyan')
acf(epsilonT,40)
pacf(epsilonT,40)
Box.test(epsilonT)
Box.test(epsilonT,type = 'Ljung')
plot(epsilonT, type = 'o', col= 'cyan')
filteredData = filter(data, rep(1/4,4))
epsilonT = dataT[3:(length(dataT)-2)] - filteredDataT[3:(length(dataT)-2)]
plot(epsilonT, type = 'o', col= 'cyan')
Box.test(epsilonT,type = 'Ljung')
Box.test(epsilonT,type = 'Ljung')
Box.test(epsilonT)
hist(epsilonT)
plot(epsilonT)
plot(epsilonT,type='o')
expEpsilonT = HoltWinters(epsilonT, alpha = 0.8, beta = FALSE, gamma = FALSE)
lines(expEpsilonT, col = 'cyan', lwd = 3)
expEpsilonT
lines(expEpsilonT$fitted[,1], col = 'cyan', lwd = 3)
expEpsilonT = HoltWinters(epsilonT, alpha = 0.7, beta = FALSE, gamma = FALSE)
lines(expEpsilonT$fitted[,1], col = 'cyan', lwd = 3)
expEpsilonT = HoltWinters(epsilonT, alpha = 0.7, beta = FALSE, gamma = FALSE)
expEpsilonT = HoltWinters(epsilonT, alpha = 0.5, beta = FALSE, gamma = FALSE)
lines(expEpsilonT$fitted[,1], col = 'magenta', lwd = 3)
expEpsilonT = HoltWinters(epsilonT)
expEpsilonT = HoltWinters(epsilonT, beta = FALSE, gamma = FALSE)
lines(expEpsilonT$fitted[,1], col = 'red', lwd = 3)
expEpsilonT$alpha
expEpsilonT = HoltWinters(epsilonT, alpha = 0.8, beta = FALSE, gamma = FALSE)
shw = ts(c(expEpsilonT$fitted, expEpsilonT$coefficients), start = 1)
esp = ts(expEpsilonT, start=1)
res = esp - shw
plot(epsilonT - expEpsilonT)
plot(epsilonT - expEpsilonT$fitted)
length(epsilonT)
length(expEpsilonT$fitted)
plot(expEpsilonT$fitted)
plot(expEpsilonT$fitted[,1])
plot(epsilonT - expEpsilonT$fitted[,1])
plot(epsilonT - ts(expEpsilonT$fitted[,1])
)
plot(epsilonT - ts(expEpsilonT$fitted[,1]))
plot(ts(epsilonT) - expEpsilonT$fitted[,1])
res = (ts(epsilonT) - expEpsilonT$fitted[,1])
plot(res)
abline(0,0,col='red')
Box.test(res)
Box.test(res, typ)
Box.test(res, type = 'Ljung')
acf(res)
ar1 = ar.ols(res, aic = F, order.max = 1, intercept = F)
plot(ar1)
ar1
plot(res)
lines(predict(ar1))
lines(1:length(res), predict(ar1))
lines(1:length(ar1), predict(ar1))
lines(arima.sim(1:length(res), c(1, -0.6981)))
lines(arima.sim(1:length(res), list=(c(1, -0.6981),0)
lines(arima.sim(1:length(res), list=(c(1, -0.6981),0))
lines(arima.sim(1:length(res), list=c(1, -0.6981))
)
lines(arima.sim(1:length(res), list(c(1, -0.6981))))
arima.sim(list(c(1,-0.6981),0))
arima.sim(list(c(1,-0.6981),0),1:length(res))
arma = arima.sim(list(c(1,-0.6981),0),1:length(res))
lines(arma, col='red')
lines(ar1$resid)
lines(ar1$resid, col = 'red')
r = res - ar1$resid
lines(r, col = 'cyan', lwd = 3)
Box.test(r)
Box.test(r, type = 'Ljung')
t = 1:100
data = 15.2 - 0.21 * t + 3.5 * rnorm(length(t),0,1)
plot(t,data, type='o')
dataLM = lm(data~t)
coefficients(dataLM)
dataRes = residuals(dataLM)
show(dataRes)
lines(t, predict(dataLM))
lines(t, predict(dataLM), col = 'red')
lines(t, predict(dataLM), col = 'red', lwd = 3)
plot(dataRes)
plot(dataRes, type = 'o')
hist(dataRes)
acf(dataRes)
pacf(dataRes)
acf(dataRes,40)
pacf(dataRes,40)
Box.test(dataRes)
Box.test(dataRes,type='Ljung')
shapiro.test(dataRes)
help("HoltWinters")
dataDif = diff(data, 2, lag = 'no')
dataDif = diff(data, 2)
help("diff")
dataDif = diff(data, differences = 2, lag = 1)
plot(dataDiff)
plot(dataDif)
plot(dataDif, type = 'o')
lines(dataRes)
lines(dataRes, col = 'cyan')
dataDif = diff(data, differences = 1, lag = 1)
lines(dataDif, col = 'red', lwd = 3)
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1)),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 2),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 8),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 50),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 50),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 50),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 50),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 50),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 50),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 50),50), type='o')
plot(arima.sim(list(ar=c(0.5,-0.5), ma=c(1,-1,1), d = 50),50), type='o')
